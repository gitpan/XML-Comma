use strict;

my $num_tests = XML::Comma->defs_from_PARs() ? 6 : 1;
use Test::More tests => $num_tests;

unless ( XML::Comma->defs_from_PARs() ) {
  print "1..1\n";
  print "ok 1\n";
  exit 0;
}


use FindBin;

use lib ".test/lib/";

use XML::Comma;
use XML::Comma::Util qw( dbg );

my $par_filename = File::Spec->catdir ( $FindBin::Bin, 'par_def.par' );
require PAR;
import  PAR  $par_filename;

ok("required and imported ok");

my $doc = XML::Comma::Doc->new ( type => '_test_par_def' );
ok("Doc->new() works");

$doc->sing ( 'hello' );
ok("Doc->foo_element works")  if  $doc->sing() eq 'hello';

$doc->plu ( 'you' ); $doc->plu ( 'and' ); $doc->plu ( 'you' );
ok("Doc->plural tests")  if  $doc->plu()->[0] eq 'you' and
                             $doc->plu()->[1] eq 'and' and
                             $doc->plu()->[2] eq 'you';

$doc->digits_el ( 23 );
ok("digist_el 1");

eval { $doc->digits_el ( 'hello' ) };
ok("digist_el 2")  if  $@;





